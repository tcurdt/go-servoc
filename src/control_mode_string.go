// Code generated by "enumer -type=Control_mode -yaml"; DO NOT EDIT

package main

import (
	"fmt"
)

const _Control_mode_name = "pos_pulse_ccw_dirpos_pulse_cw_dirpos_dipulse_ccw_dirpos_dipulse_cw_dirpos_digitalpos_ramp_enablevel_analog_cwvel_analog_ccwvel_digital_pwm_halfvel_digital_pwm_inversionvel_ramp_enabletorque_analog_cwtorque_analog_ccwtorque_digital_pwm_halftorque_digital_pwm_inversion"

var _Control_mode_index = [...]uint16{0, 17, 33, 52, 70, 81, 96, 109, 123, 143, 168, 183, 199, 216, 239, 267}

func (i Control_mode) String() string {
	if i < 0 || i >= Control_mode(len(_Control_mode_index)-1) {
		return fmt.Sprintf("Control_mode(%d)", i)
	}
	return _Control_mode_name[_Control_mode_index[i]:_Control_mode_index[i+1]]
}

var _Control_modeNameToValue_map = map[string]Control_mode{
	_Control_mode_name[0:17]:    0,
	_Control_mode_name[17:33]:   1,
	_Control_mode_name[33:52]:   2,
	_Control_mode_name[52:70]:   3,
	_Control_mode_name[70:81]:   4,
	_Control_mode_name[81:96]:   5,
	_Control_mode_name[96:109]:  6,
	_Control_mode_name[109:123]: 7,
	_Control_mode_name[123:143]: 8,
	_Control_mode_name[143:168]: 9,
	_Control_mode_name[168:183]: 10,
	_Control_mode_name[183:199]: 11,
	_Control_mode_name[199:216]: 12,
	_Control_mode_name[216:239]: 13,
	_Control_mode_name[239:267]: 14,
}

func Control_modeString(s string) (Control_mode, error) {
	if val, ok := _Control_modeNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Control_mode values", s)
}

func (i Control_mode) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

func (i *Control_mode) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = Control_modeString(s)
	return err
}
